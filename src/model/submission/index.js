import PropTypes from "prop-types";
import {UserProps} from "model/auth/profile";

export const SubmissionProps = {
  id: PropTypes.number,
  date: PropTypes.string,
  time: PropTypes.number,
  memory: PropTypes.number,
  points: PropTypes.number,
  status: PropTypes.string,
  result: PropTypes.string,
  error: PropTypes.string,
  current_testcase: PropTypes.number,
  batch: PropTypes.bool,
  case_points: PropTypes.number,
  case_total: PropTypes.number,
  judged_date: PropTypes.string,
  rejudged_date: PropTypes.string,
  contest_object: PropTypes.any,
  is_pretested: PropTypes.any,
  locked_after: PropTypes.any,
  user: PropTypes.shape(UserProps).isRequiredButNullable,
  problem: PropTypes.shape({
    solved: PropTypes.bool,
    attempted: PropTypes.any,
    shortname: PropTypes.string,
    title: PropTypes.string,
    attempted_count: PropTypes.number,
    solved_count: PropTypes.number,
    points: PropTypes.number,
    partial: PropTypes.bool,
    short_circuit: PropTypes.bool,
    is_public: PropTypes.bool,
    is_organization_private: PropTypes.bool,
    time_limit: PropTypes.number,
    memory_limit: PropTypes.number,
    created: PropTypes.string,
    modified: PropTypes.string,
  }),
  language: PropTypes.string,
  language_ace: PropTypes.string,
  source: PropTypes.string,
  judged_on: PropTypes.shape({
    id: PropTypes.number,
    name: PropTypes.string,
  }),
  test_cases: PropTypes.arrayOf(
    PropTypes.shape({
      id: PropTypes.number,
      case: PropTypes.number,
      status: PropTypes.string,
      time: PropTypes.number,
      memory: PropTypes.number,
      points: PropTypes.number,
      total: PropTypes.number,
      batch: PropTypes.any,
      feedback: PropTypes.string,
      extended_feedback: PropTypes.string,
      output: PropTypes.string,
    })
  ),
};
